name: Java CI with Gradle & Docker

on:
  push:
    branches: [ "develop", "feat/*", "cicd/*", "fix/*", "hotfix/*", "refactor/*", "chore/*", "docs/*", "style/*", "test/*" ]
  pull_request:
    types : [ closed ]
  workflow_dispatch: # 수동 실행 가능
jobs:
  build:
    runs-on: ubuntu-latest
    # develop 기반 브랜치가 PR이 merge 됐을 경우에만 진행
    # 개발 이후에 if 문 붙이기.. if문 있으면 Status skipped 됨
    # if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop'

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
            java-version: '17'
            distribution: 'temurin'

      - name: Checkout
        uses: actions/checkout@v3

      # Spring Boot 어플리케이션 Build (1)
      - name: Spring Boot Build
        run: ./gradlew clean build -x test --warning-mode=all --stacktrace

      # Docker 이미지 Build (2)
      - name: docker image build
        run: docker build -t rimi3226/gamegoo .

      # DockerHub Login (3)
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}

      # Docker Hub push (4)
      - name: docker Hub push
        run: docker push rimi3226/gamegoo

      # GET GitHub IP (5)
      - name: get GitHub IP
        id: ip
        uses: Gamegoo-repo/public-ip@v1.2

      # Configure AWS Credentials (6) - AWS 접근 권한 취득(IAM)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # Add github ip to AWS (7)
      - name: Add GitHub IP to AWS
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # AWS EC2 Server Connect & Docker 명령어 실행 (8)
      - name: AWS EC2 Connection
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          password: ${{ secrets.EC2_PASSWORD }}
          port: ${{ secrets.EC2_SSH_PORT }}
          timeout: 60s
          script: |
            sudo docker stop boot-prac-ci
            sudo docker rm boot-prac-ci
            sudo docker run -it -d -p 8080:8080 --name boot-prac-ci lucaskang134/boot-prac-ci

      # REMOVE Github IP FROM security group (9)
      - name: Remove IP FROM security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32